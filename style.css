@keyframes toastyAnimation {
    50% {
        transform: translateX(-180px);
        transition: 1s;
    }
    100% {
        transition: ease-out;
    }
}

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    height: 120vh;
    display: flex;
    background-color: rgb(80, 24, 7);
    background-image: url('./img/logo_2.png');
}

.memory-game {
    height: 1100px;
    width: 1400px;
    margin: auto;
    display: flex;
    flex-wrap: wrap;
    perspective: 1000px; /* perspectiva do usuario no eixo z, quanto maior, maior o efeito da perspectiva */
}

.card {
    height: calc( 20% - 10px);
    width: calc(12% - 10px); /* era 25% e 10px*/
    margin: 5px;
    position: relative;
    box-shadow: 1px 1px 1px rgba(0,0,0,.3);
    cursor: pointer;
    transform: scale(1);
    transform-style: preserve-3d; /* adiciona perspectiva 3d, para que o elemento nao fique achatada no plano */
    transition: transform .5s; /* adiciona efeito de movimento ao flip do card */
}

.card:active{
    transform: scale(0.97);
    transition: transform .2s;
}

.card-front,
.card-back {
  width: 100%;
  height: 100%;
  padding: 20px;
  position: absolute;
  border-radius: 5px;
  /* background: rgb(92, 187, 182); */
  background: rgb(173, 92, 26);
  backface-visibility: hidden; /* todo elemento tem uma frente e um verso (ao contrario, como um espelho.) essa propriedade retira o verso */
}

.card-front {
    transform: rotateY(180deg); /* antes, o verso aparecia transparente, pois ambas as imagens tem position absolute, ao girar no eixo Y, elas ficaram com os versos virados */
}

/* flip card animation */

.card.flip {
    transform: rotateY(180deg);
}

.buttons {
    padding: 10px;
    top: 300px;
    line-height: 30px;
    right: 0px;
    position: fixed;
}

.button-background-sound {
    width: 10vh;
    cursor: pointer;
    opacity: 0.8;
}

.button-background-sound:hover {
    opacity: unset;
    transform: scale(0.9);
}

:hover > #background-sound-volume {
    visibility: visible;
}

.button-soundeffects {
    width: 10vh;
    cursor: pointer;
    opacity: 0.8;
}

.button-soundeffects:hover {
    opacity: unset;
    transform: scale(0.9);
}

:hover > #soundeffects-volume {
    visibility: visible;
}

.reset-button {
    width: 10vh;
    cursor: pointer;
    opacity: 0.8;
}

.reset-button:hover {
    opacity: unset;
    transform: scale(0.9);
}

#background-sound-volume {
    visibility: hidden;
    width: 10vh;
    top: 350px;
    right: 5vw;
    position: fixed;
    cursor: pointer;
}

#soundeffects-volume {
    visibility: hidden;
    width: 10vh;
    top: 450px;
    right: 5vw;
    position: fixed;
    cursor: pointer;
}

.toasty {
    visibility: hidden;
    top: 82vh;
    position: fixed;
}

.toasty.showup {
    visibility: visible;
    width: 10vw;
    animation: toastyAnimation 2s;
}